<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NHN Academy</title><link>https://nhnacademy.github.io/</link><atom:link href="https://nhnacademy.github.io/index.xml" rel="self" type="application/rss+xml"/><description>NHN Academy</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2021-2022 NHN Acadmy Corp. All Rights Reserved.</copyright><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate><image><url>https://nhnacademy.github.io/media/icon_hue25167c2545ffc4140d5be92d30ef05d_49467_512x512_fill_lanczos_center_3.png</url><title>NHN Academy</title><link>https://nhnacademy.github.io/</link></image><item><title>Quiz 1</title><link>https://nhnacademy.github.io/courses/java.basic/language/quiz001/</link><pubDate>Sun, 22 Apr 2007 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/courses/java.basic/language/quiz001/</guid><description>&lt;p>Java에서는 call-by-value로 인자 값을 주고 받습니다.&lt;/p>
&lt;pre>&lt;code class="language-Java">class 물체 {
private int n = 0;
public 물체( int m ) { n = m; }
public void modify( int m ) { n = m; }
public String toString() { return &amp;quot;&amp;quot; + n; }
}
class ParameterPassing {
public static void callByValue( int 복사본 ) { 복사본 = 0; }
public static void callByValue( 물체 copy ) { copy.modify( 0 ); }
public static void test() {
int 원본 = 1;
System.out.println( 원본 );
callByValue( 원본 );
System.out.println( 원본 );
물체 source = new 물체( 1 );
System.out.println( source );
callByValue( source );
System.out.println( source );
}
}
ParameterPassing.test(); // Jupyter notebook에서만
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>1
1
1
0
&lt;/code>&lt;/pre>
&lt;ol>
&lt;li>원본은 바뀌지 않지만, source는 변했습니다. Call-by-value인데도 source가 변한 까닭은 무엇인가요?&lt;/li>
&lt;li>위의 실험 결과로 볼 때 Java는 call-by-reference를 지원한다고 볼 수 있나요?&lt;/li>
&lt;/ol>
&lt;h2 id="도움말">도움말&lt;/h2>
&lt;details class="spoiler " id="spoiler-0">
&lt;summary>Jupyter notebook&lt;/summary>
&lt;p>&lt;a href="https://github.com/SpencerPark/IJava">Java&lt;/a> 커널이 깔린 Jupyter notebook이 아니라면 test()를 곧바로 돌릴 수 없습니다.&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-1">
&lt;summary>귀띔&lt;/summary>
&lt;p>Java 언어에서 Value Semantics와 Reference(Pointer) Semantics의 차이를 코드로 시연하면서 설명할 수 있는지 되새겨보는 문제입니다.&lt;/p>
&lt;/details></description></item><item><title>Quiz 2</title><link>https://nhnacademy.github.io/courses/java.basic/language/quiz002/</link><pubDate>Sun, 22 Apr 2007 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/courses/java.basic/language/quiz002/</guid><description>&lt;p>HashSet으로 1들의 집합을 만듭니다.&lt;/p>
&lt;pre>&lt;code class="language-Java">import java.util.*;
class Sameness {
public static void 집합크기(Set 집합, Object[] elements) {
Collections.addAll( 집합, elements ) ;
System.out.println( 집합.toString() + &amp;quot;의 원소 수는 &amp;quot; + 집합.size() );
}
static Integer one = new Integer(1);
static Object ones[] = {
1, 1.0, one, one.intValue(), one.shortValue()
, one.longValue(), one.floatValue(), one.doubleValue()
, new Long(1), new Float(1), new Double(1)
};
}
Sameness.집합크기( new HashSet(), Sameness.ones ); // Jupyter Notebook에서만
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>[1.0, 1.0, 1, 1, 1]의 원소 수는 5
&lt;/code>&lt;/pre>
&lt;ol>
&lt;li>집합의 크기(원소의 개수)가 왜 5일까요?&lt;/li>
&lt;/ol>
&lt;p>분수(유리수)를 정의합니다.&lt;/p>
&lt;pre>&lt;code class="language-Java">class 분수 {
public 분수(int numerator, int denominator) throws ArithmeticException {
if ( 0 == denominator ) throw new ArithmeticException( &amp;quot;분모 0&amp;quot; );
분자 = numerator; 분모 = denominator;
if (denominator &amp;lt; 0) { 분자 = - numerator; 분모 = - denominator; }
약분();
}
public int getDenominator() { return 분모; }
public int getNumerator() { return 분자; }
public String toString() { return String.valueOf( 분자 ) + '/' + String.valueOf( 분모 ); }
private void 약분() {
int g = 최대공약수( Math.abs(분자), Math.abs(분모) );
{ 분자 = 분자 / g; 분모 = 분모 / g; }
}
private static int 최대공약수(int x, int y) { return 0 == y ? x : 최대공약수(y, x % y); }
private int 분모, 분자;
}
&lt;/code>&lt;/pre>
&lt;p>이제 분수 집합도 만들 수 있습니다.&lt;/p>
&lt;pre>&lt;code class="language-Java">class Two {
static 분수 twos[] = { new 분수( 2, 1 ), new 분수( 4, 2 ), new 분수( -2, -1 ) };
}
Sameness.집합크기( new HashSet(), Two.twos ); // in Jupiter Notebook
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>[2/1, 2/1, 2/1]의 원소 수는 3
&lt;/code>&lt;/pre>
&lt;ol start="2">
&lt;li>집합의 원소 수가 3개입니다. 틀린 답이 나오는 이유를 설명하고 정답이 나오도록 만들어 보세요.&lt;/li>
&lt;li>HashSet 대신에 TreeSet을 써서 같은 실험을 해보세요.&lt;/li>
&lt;/ol>
&lt;h2 id="도움말">도움말&lt;/h2>
&lt;p>&lt;details class="spoiler " id="spoiler-0">
&lt;summary>귀띔&lt;/summary>
&lt;p>두 데이터가 같다는 것은 무슨 뜻일까요? 프로그래밍 언어에서 value equality와 reference (Pointer) equality를 차이를 이해하고, 이어서 새로운 데이터를 만들 때 그 데이터 타입에 속하는 원소(또는 인스턴스) 사이의 같거나 다름을 어떻게 이해하고 정의할 것인지 아니면 아예 정의할 수 없거나 하지 말아야 하는지 따위 주요한 주제를 짚고 넘어가는 문제입니다. &lt;a href="https://en.wikibooks.org/wiki/Java_Programming/Comparing_Objects">Comparing Objects&lt;/a>를 읽어보세요.&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-1">
&lt;summary>분수(유리수)&lt;/summary>
&lt;p>&lt;a href="https://commons.apache.org/proper/commons-math/">Apache Commons Math ™ &lt;/a>에 &lt;a href="https://commons.apache.org/proper/commons-math/userguide/fraction.html">Fraction&lt;/a> 클래스가 유리수(분수)를 구현합니다.&lt;/p>
&lt;/details>&lt;/p></description></item><item><title>Quiz 3</title><link>https://nhnacademy.github.io/courses/java.basic/language/quiz003/</link><pubDate>Sun, 22 Apr 2007 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/courses/java.basic/language/quiz003/</guid><description>&lt;p>&lt;a href="../quiz002">분수&lt;/a>를 수천 개 만들어 쓰는 프로그램을 짰더니 분수의 수가 늘어날수록 속도가 떨어졌습니다. 원인을 살펴보니 약분 때문이었습니다. 분자 분모가 필요할 때만 약분이 되도록 getter(또는 Selector)를 고칩니다.&lt;/p>
&lt;pre>&lt;code class="language-Java">class 분수 {
public 분수(int numerator, int denominator) throws ArithmeticException {
if ( 0 == denominator ) throw new ArithmeticException( &amp;quot;분모 0&amp;quot; );
분자 = numerator; 분모 = denominator;
if (denominator &amp;lt; 0) { 분자 = - numerator; 분모 = - denominator; }
// 약분();
}
public int getDenominator() { 약분(); return 분모; }
public int getNumerator() { 약분(); return 분자; }
public String toString() { return String.valueOf( 분자 ) + '/' + String.valueOf( 분모 ); }
private void 약분() {
int g = 최대공약수( Math.abs(분자), Math.abs(분모) );
{ 분자 = 분자 / g; 분모 = 분모 / g; }
}
private static int 최대공약수(int x, int y) { return 0 == y ? x : 최대공약수(y, x % y); }
private int 분모, 분자;
}
System.out.println( new 분수(2,4) ) // Jupiter Notebook에서만
&lt;/code>&lt;/pre>
&lt;pre>&lt;code>2/4
&lt;/code>&lt;/pre>
&lt;ol>
&lt;li>기약분수가 찍히지 않습니다. 코드에는 버그가 생겼습니다. 약분을 옮겼을 뿐인데 왜 없던 버그가 갑자기 생겼을까요? 잘못된 부분을 고쳐 써 봅시다.&lt;/li>
&lt;li>분수의 &lt;a href="https://course.ccs.neu.edu/cs5500f14/Notes/Testing1/abstractionBarrierAlt.html" target="_blank" rel="noopener">abstraction barrier&lt;/a>는 어떤 연산으로 이루어지나요? 고쳐 쓴 코드는 abstraction barrier를 무너뜨리지 않나요?&lt;/li>
&lt;li>분수의 분자 분모를 바꾸는 setter가 필요한가요? &lt;code>setNumerator(int)&lt;/code>, &lt;code>setDenominator(int)&lt;/code>는 분수 데이터의 abstraction barrier를 정의하는데 포함되나요?&lt;/li>
&lt;/ol>
&lt;h2 id="도움말">도움말&lt;/h2>
&lt;details class="spoiler " id="spoiler-0">
&lt;summary>귀띔&lt;/summary>
&lt;p>데이터의 What과 How (또는 쓰는 쪽과 만드는 쪽 )을 경계 짓는 &lt;a href="https://course.ccs.neu.edu/cs5500f14/Notes/Testing1/abstractionBarrierAlt.html">abstraction barrier&lt;/a>를 무시하고, 무심코 코드를 쓰면 어떻게 버그가 생겨날 수 있는지를 잘 이해하고 있는지 되새기는 문제입니다.&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-1">
&lt;summary>Abstract Barrier에 대한 공부 거리&lt;/summary>
&lt;p>&lt;ol>
&lt;li>Marvin Zhang, &lt;a href="https://inst.eecs.berkeley.edu/~cs61a/su16/assets/slides/09-Data_Abstraction_1pp.pdf">Lecture 9: Data Abstraction&lt;/a> CS 61A: The Structure and Interpretation of Computer Programs, Berkeley&lt;/li>
&lt;li>Harold Abelson and Gerald Jay Sussman with Julie Sussman, &lt;a href="https://mitpress.mit.edu/sites/default/files/sicp/full-text/sicp/book/node29.html">Abstraction Barriers&lt;/a>, Introduction to Data Abstraction, Building Abstraction with Data, Structure and Interpretation
of Computer Programs&lt;/li>
&lt;/ol>
&lt;/p>
&lt;/details></description></item><item><title>Hugo Academic Theme Demo</title><link>https://nhnacademy.github.io/widgets-for-home/demo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/widgets-for-home/demo/</guid><description>&lt;p>Welcome to the demo of the &lt;strong>academic resumé template&lt;/strong> for Wowchemy, the Website Builder for Hugo.&lt;/p>
&lt;p>&lt;a href="https://wowchemy.com/templates/" target="_blank" rel="noopener">Explore similar templates&lt;/a>&lt;/p>
&lt;p>&lt;strong>Over 500,000 &lt;a href="https://wowchemy.com/" target="_blank" rel="noopener">Amazing Websites&lt;/a> have Already Been Built with Wowchemy&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://wowchemy.com/templates/" target="_blank" rel="noopener">Join&lt;/a> the Most Empowered Hugo Community&lt;/strong>&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
&lt;p>This homepage section is an example of adding &lt;a href="https://wowchemy.com/docs/content/writing-markdown-latex/">elements&lt;/a> to the &lt;a href="https://wowchemy.com/docs/getting-started/page-builder/">&lt;em>Blank&lt;/em> widget&lt;/a>.&lt;/p>
&lt;p>Backgrounds can be applied to any section. Here, the &lt;em>background&lt;/em> option is set give an &lt;em>image parallax&lt;/em> effect.&lt;/p>
&lt;/div>
&lt;/div></description></item><item><title>Biography</title><link>https://nhnacademy.github.io/widgets-for-home/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/widgets-for-home/about/</guid><description/></item><item><title>Skills</title><link>https://nhnacademy.github.io/widgets-for-home/skills/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/widgets-for-home/skills/</guid><description/></item><item><title>Experience</title><link>https://nhnacademy.github.io/widgets-for-home/experience/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/widgets-for-home/experience/</guid><description/></item><item><title>Accomplish&amp;shy;ments</title><link>https://nhnacademy.github.io/widgets-for-home/accomplishments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/widgets-for-home/accomplishments/</guid><description/></item><item><title>새 글</title><link>https://nhnacademy.github.io/widgets-for-home/posts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/widgets-for-home/posts/</guid><description/></item><item><title>Gallery</title><link>https://nhnacademy.github.io/widgets-for-home/gallery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/widgets-for-home/gallery/</guid><description>
&lt;div class="gallery">
&lt;a data-fancybox="gallery-themes" href="https://nhnacademy.github.io/media/albums/themes/theme-1950s.png" >
&lt;img src="https://nhnacademy.github.io/media/albums/themes/theme-1950s_huaf5482f8cea0c5a703a328640e3b7509_21614_0x190_resize_lanczos_3.png" loading="lazy" alt="theme-1950s.png" width="124" height="190">
&lt;/a>
&lt;a data-fancybox="gallery-themes" href="https://nhnacademy.github.io/media/albums/themes/theme-apogee.png" >
&lt;img src="https://nhnacademy.github.io/media/albums/themes/theme-apogee_hu4b45d99db97150df01464c393bfd17d4_24119_0x190_resize_lanczos_3.png" loading="lazy" alt="theme-apogee.png" width="124" height="190">
&lt;/a>
&lt;a data-fancybox="gallery-themes" href="https://nhnacademy.github.io/media/albums/themes/theme-coffee-playfair.png" >
&lt;img src="https://nhnacademy.github.io/media/albums/themes/theme-coffee-playfair_hu446a8f670cc5622adcc77b97ba95f6c5_22462_0x190_resize_lanczos_3.png" loading="lazy" alt="theme-coffee-playfair.png" width="124" height="190">
&lt;/a>
&lt;a data-fancybox="gallery-themes" href="https://nhnacademy.github.io/media/albums/themes/theme-dark.png" >
&lt;img src="https://nhnacademy.github.io/media/albums/themes/theme-dark_hu1e8601ecc47f58eada7743fdcd709d3d_21456_0x190_resize_lanczos_3.png" loading="lazy" alt="theme-dark.png" width="124" height="190">
&lt;/a>
&lt;a data-fancybox="gallery-themes" href="https://nhnacademy.github.io/media/albums/themes/theme-default.png" >
&lt;img src="https://nhnacademy.github.io/media/albums/themes/theme-default_huba6228b7bdf30e2f03f12ea91b2cba0d_21751_0x190_resize_lanczos_3.png" loading="lazy" alt="theme-default.png" width="124" height="190">
&lt;/a>
&lt;a data-fancybox="gallery-themes" href="https://nhnacademy.github.io/media/albums/themes/theme-forest.png" >
&lt;img src="https://nhnacademy.github.io/media/albums/themes/theme-forest_hu4f093a1c683134431456584193ea41ee_21797_0x190_resize_lanczos_3.png" loading="lazy" alt="theme-forest.png" width="124" height="190">
&lt;/a>
&lt;a data-fancybox="gallery-themes" href="https://nhnacademy.github.io/media/albums/themes/theme-ocean.png" >
&lt;img src="https://nhnacademy.github.io/media/albums/themes/theme-ocean_hu14831ccafc2219f30a7a096fa7617e01_21760_0x190_resize_lanczos_3.png" loading="lazy" alt="theme-ocean.png" width="124" height="190">
&lt;/a>
&lt;a data-fancybox="gallery-themes" href="https://nhnacademy.github.io/media/albums/themes/theme-strawberry.png" >
&lt;img src="https://nhnacademy.github.io/media/albums/themes/theme-strawberry_hu36b0b347fcca08bd39e2df22dcedbdfb_39532_0x190_resize_lanczos_3.png" loading="lazy" alt="theme-strawberry.png" width="124" height="190">
&lt;/a>
&lt;/div></description></item><item><title>아카데미 사람들</title><link>https://nhnacademy.github.io/widgets-for-home/people/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/widgets-for-home/people/</guid><description/></item><item><title>Recent &amp; Upcoming Talks</title><link>https://nhnacademy.github.io/widgets-for-home/talks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/widgets-for-home/talks/</guid><description/></item><item><title>Featured Publications</title><link>https://nhnacademy.github.io/widgets-for-home/featured/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/widgets-for-home/featured/</guid><description/></item><item><title>Popular Topics</title><link>https://nhnacademy.github.io/widgets-for-home/tags/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/widgets-for-home/tags/</guid><description/></item><item><title>Contact</title><link>https://nhnacademy.github.io/widgets-for-home/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/widgets-for-home/contact/</guid><description/></item><item><title>Example Talk</title><link>https://nhnacademy.github.io/talk/example-talk/</link><pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/talk/example-talk/</guid><description>&lt;div class="alert alert-note">
&lt;div>
Click on the &lt;strong>Slides&lt;/strong> button above to view the built-in slides feature.
&lt;/div>
&lt;/div>
&lt;p>Slides can be added in a few ways:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create&lt;/strong> slides using Wowchemy&amp;rsquo;s &lt;a href="https://wowchemy.com/docs/managing-content/#create-slides" target="_blank" rel="noopener">&lt;em>Slides&lt;/em>&lt;/a> feature and link using &lt;code>slides&lt;/code> parameter in the front matter of the talk file&lt;/li>
&lt;li>&lt;strong>Upload&lt;/strong> an existing slide deck to &lt;code>static/&lt;/code> and link using &lt;code>url_slides&lt;/code> parameter in the front matter of the talk file&lt;/li>
&lt;li>&lt;strong>Embed&lt;/strong> your slides (e.g. Google Slides) or presentation video on this page using &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">shortcodes&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Further event details, including &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">page elements&lt;/a> such as image galleries, can be added to the body of this page.&lt;/p></description></item><item><title>TIP Quiz - Monte Carlo Method in Stream Paradigm</title><link>https://nhnacademy.github.io/publication/monte_carlo/</link><pubDate>Thu, 17 Feb 2022 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/publication/monte_carlo/</guid><description>&lt;hr>
&lt;p>NHN &lt;strong>Theory Into Practice&lt;/strong> series&lt;/p></description></item><item><title>Slides</title><link>https://nhnacademy.github.io/slides/example/</link><pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/slides/example/</guid><description>&lt;h1 id="create-slides-in-markdown-with-wowchemy">Create slides in Markdown with Wowchemy&lt;/h1>
&lt;p>&lt;a href="https://wowchemy.com/" target="_blank" rel="noopener">Wowchemy&lt;/a> | &lt;a href="https://owchemy.com/docs/managing-content/#create-slides" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Efficiently write slides in Markdown&lt;/li>
&lt;li>3-in-1: Create, Present, and Publish your slides&lt;/li>
&lt;li>Supports speaker notes&lt;/li>
&lt;li>Mobile friendly slides&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="controls">Controls&lt;/h2>
&lt;ul>
&lt;li>Next: &lt;code>Right Arrow&lt;/code> or &lt;code>Space&lt;/code>&lt;/li>
&lt;li>Previous: &lt;code>Left Arrow&lt;/code>&lt;/li>
&lt;li>Start: &lt;code>Home&lt;/code>&lt;/li>
&lt;li>Finish: &lt;code>End&lt;/code>&lt;/li>
&lt;li>Overview: &lt;code>Esc&lt;/code>&lt;/li>
&lt;li>Speaker notes: &lt;code>S&lt;/code>&lt;/li>
&lt;li>Fullscreen: &lt;code>F&lt;/code>&lt;/li>
&lt;li>Zoom: &lt;code>Alt + Click&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://github.com/hakimel/reveal.js#pdf-export" target="_blank" rel="noopener">PDF Export&lt;/a>: &lt;code>E&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="code-highlighting">Code Highlighting&lt;/h2>
&lt;p>Inline code: &lt;code>variable&lt;/code>&lt;/p>
&lt;p>Code block:&lt;/p>
&lt;pre>&lt;code class="language-python">porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
print(&amp;quot;Eating...&amp;quot;)
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="math">Math&lt;/h2>
&lt;p>In-line math: $x + y = z$&lt;/p>
&lt;p>Block math:&lt;/p>
&lt;p>$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p>
&lt;hr>
&lt;h2 id="fragments">Fragments&lt;/h2>
&lt;p>Make content appear incrementally&lt;/p>
&lt;pre>&lt;code>{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code>&lt;/pre>
&lt;p>Press &lt;code>Space&lt;/code> to play!&lt;/p>
&lt;span class="fragment " >
One
&lt;/span>
&lt;span class="fragment " >
**Two**
&lt;/span>
&lt;span class="fragment " >
Three
&lt;/span>
&lt;hr>
&lt;p>A fragment can accept two optional parameters:&lt;/p>
&lt;ul>
&lt;li>&lt;code>class&lt;/code>: use a custom style (requires definition in custom CSS)&lt;/li>
&lt;li>&lt;code>weight&lt;/code>: sets the order in which a fragment appears&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="speaker-notes">Speaker Notes&lt;/h2>
&lt;p>Add speaker notes to your presentation&lt;/p>
&lt;pre>&lt;code class="language-markdown">{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code>&lt;/pre>
&lt;p>Press the &lt;code>S&lt;/code> key to view the speaker notes!&lt;/p>
&lt;aside class="notes">
&lt;ul>
&lt;li>Only the speaker can read these notes&lt;/li>
&lt;li>Press &lt;code>S&lt;/code> key to view&lt;/li>
&lt;/ul>
&lt;/aside>
&lt;hr>
&lt;h2 id="themes">Themes&lt;/h2>
&lt;ul>
&lt;li>black: Black background, white text, blue links (default)&lt;/li>
&lt;li>white: White background, black text, blue links&lt;/li>
&lt;li>league: Gray background, white text, blue links&lt;/li>
&lt;li>beige: Beige background, dark text, brown links&lt;/li>
&lt;li>sky: Blue background, thin dark text, blue links&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>night: Black background, thick white text, orange links&lt;/li>
&lt;li>serif: Cappuccino background, gray text, brown links&lt;/li>
&lt;li>simple: White background, black text, blue links&lt;/li>
&lt;li>solarized: Cream-colored background, dark green text, blue links&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-noprocess data-shortcode-slide
data-background-image="/media/boards.jpg"
>
&lt;h2 id="custom-slide">Custom Slide&lt;/h2>
&lt;p>Customize the slide style and background&lt;/p>
&lt;pre>&lt;code class="language-markdown">{{&amp;lt; slide background-image=&amp;quot;/media/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h2 id="custom-css-example">Custom CSS Example&lt;/h2>
&lt;p>Let&amp;rsquo;s make headers navy colored.&lt;/p>
&lt;p>Create &lt;code>assets/css/reveal_custom.css&lt;/code> with:&lt;/p>
&lt;pre>&lt;code class="language-css">.reveal section h1,
.reveal section h2,
.reveal section h3 {
color: navy;
}
&lt;/code>&lt;/pre>
&lt;hr>
&lt;h1 id="questions">Questions?&lt;/h1>
&lt;p>&lt;a href="https://github.com/wowchemy/wowchemy-hugo-modules/discussions" target="_blank" rel="noopener">Ask&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://wowchemy.com/docs/managing-content/#create-slides" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/p></description></item><item><title/><link>https://nhnacademy.github.io/admin/config.yml</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/admin/config.yml</guid><description/></item><item><title>NHN PIE</title><link>https://nhnacademy.github.io/project/pie/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/project/pie/</guid><description>&lt;ul>
&lt;li>&lt;a href="%22https://nhnacademy.com/bootcamp/develop%22">NHN Dooray! PIE&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>NHN TIP</title><link>https://nhnacademy.github.io/project/tip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/project/tip/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://nhnacademy.github.io/project/pie">NHN Practice Into Education(줄여서 PIE) 과정&lt;/a>을 이수하는데 필요한 &amp;ldquo;이론과 응용력&amp;quot;을 교육 과정으로 정의합니다.&lt;/li>
&lt;li>2023년부터 경남 공유대학에서는 NHN Theory Into Practice(줄여서 TIP, 이전 NHN Track) 과정을 이수하고 정해진 학점 기준을 얻고 인증 시험을 거쳐서 NHN Java PIE(/project/pie)의 연수 자격을 얻습니다.&lt;/li>
&lt;li>2022년 이후 광주에서 열릴 Java PIE 과정의 연수생도 자격도 동일합니다.&lt;/li>
&lt;li>연수 자격 인증을 얻기 위한 시험을 치르려면 어떤 이론과 경험을 미리 갖추고 있어야 하는지 교육 과정을 세밀하게 살펴 보세요.&lt;/li>
&lt;li>&lt;a href="https://nhnacademy.github.io/courses">Quiz&lt;/a>를 풀면서 점검하면 준비에 도움이 됩니다.&lt;/li>
&lt;/ul></description></item></channel></rss>