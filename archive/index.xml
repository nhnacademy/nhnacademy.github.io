<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>창고 | NHN Academy</title><link>https://nhnacademy.github.io/archive/</link><atom:link href="https://nhnacademy.github.io/archive/index.xml" rel="self" type="application/rss+xml"/><description>창고</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2021-2022 NHN Academy Corp. All Rights Reserved.</copyright><image><url>https://nhnacademy.github.io/media/icon_hu4e12ec6aab5870d438fb169d7a9ab63c_8541_512x512_fill_lanczos_center_3.png</url><title>창고</title><link>https://nhnacademy.github.io/archive/</link></image><item><title>TIP</title><link>https://nhnacademy.github.io/archive/tip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nhnacademy.github.io/archive/tip/</guid><description>&lt;ul>
&lt;li>Theory Into Practice의 줄임말입니다.&lt;/li>
&lt;li>&lt;a href="https://nhnacademy.github.io/courses/nhn_track">이론&lt;/a>을 실무에 쓸 수 있도록 돕는데 목표를 둡니다.&lt;/li>
&lt;/ul>
&lt;h2 id="약한-tip">약한 TIP&lt;/h2>
&lt;ul>
&lt;li>교육 과정이나 교안이 없습니다.&lt;/li>
&lt;li>4~5명 정도 모여서 함께 문제를 푸는 것이 학습 과정입니다.&lt;/li>
&lt;li>문제를 이해하고 해답을 스스로 찾는 과정에서 학습이 이루어집니다.&lt;/li>
&lt;li>문제를 푸는 데 필요한 기초는 각자가 알아서 합니다.&lt;/li>
&lt;li>교사는 모임별 토론식 동료 학습에 가능한 끼어들지 않습니다.&lt;/li>
&lt;li>교사는 문제를 내거나 자료를 전달합니다.&lt;/li>
&lt;li>교사는 학습자나 학습자 모임의 학습 경로나 방법을 상담하고 지도합니다.&lt;/li>
&lt;/ul>
&lt;h2 id="강한-tip">강한 TIP&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://nhnacademy.github.io/archive/tip#%ec%95%bd%ed%95%9c-tip">약한 TIP&lt;/a>을 따릅니다.&lt;/li>
&lt;li>모든 문제는 연결됩니다.&lt;/li>
&lt;li>한 문제의 답 또는 결과는 다른 문제의 입력입니다.&lt;/li>
&lt;li>여러 문제의 답 또는 결과를 조립하면 큰 문제의 입력이 됩니다.&lt;/li>
&lt;/ol>
&lt;h2 id="역사">역사&lt;/h2>
&lt;ul>
&lt;li>1999년에 개발하기 시작해서 2003년에 초판을 완성했습니다.&lt;/li>
&lt;li>MPS(Multi-paradigm Problem Solving)란 이름으로, 대학에서 모든 학과를 대상으로 공학 문제 해결 능력을 기르기 위해 절차 인식론의 교육 효과를 실현하는 수단으로 컴퓨터 프로그래밍을 교양으로 가르치는 프로그램을 개발하는 데 5년여 정도 응용한 적이 있습니다.&lt;/li>
&lt;li>MPS는 &lt;a href="https://ocw.mit.edu/courses/6-001-structure-and-interpretation-of-computer-programs-spring-2005/" target="_blank" rel="noopener">MIT SICP 6.001&lt;/a>과 &lt;a href="https://en.wikipedia.org/wiki/How_to_Design_Programs" target="_blank" rel="noopener">HTDP&lt;/a>를 TIP 방식으로 재구성하면서 시작하였으나 뒤에는 데이터를 읽고 해석하는 힘을 길러주기 위하여 &lt;a href="https://ieeexplore.ieee.org/document/7760759" target="_blank" rel="noopener">스프레드시트 패러다임&lt;/a>을 도입하기도 합니다.&lt;/li>
&lt;/ul></description></item></channel></rss>